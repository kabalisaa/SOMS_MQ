# Generated by Django 4.2.2 on 2023-06-29 20:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('gender', models.CharField(choices=[('', 'Select Gender'), ('Male', 'Male'), ('Female', 'Female')], default='', max_length=10, verbose_name='Gender')),
                ('is_manager', models.BooleanField(default=False, verbose_name='Is Manager')),
                ('is_trainer', models.BooleanField(default=False, verbose_name='Is Trainer')),
                ('is_trainee', models.BooleanField(default=False, verbose_name='Is Trainee')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ssn', models.CharField(blank=True, max_length=100, null=True, verbose_name='SSN')),
                ('profilePicture', models.ImageField(blank=True, null=True, upload_to='images/profile/', validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])], verbose_name='Image')),
                ('phone1', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Phone 1')),
                ('phone2', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Phone 2')),
                ('specialization', models.CharField(blank=True, max_length=100, null=True, verbose_name='Specializations')),
                ('locationAddress', models.CharField(max_length=200, verbose_name='Address')),
                ('stack', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='trainers', to='main.stack', verbose_name='Stack belonging')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trainers', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='Trainee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('git_account', models.URLField(verbose_name='Git Account Link')),
                ('profilePicture', models.ImageField(blank=True, null=True, upload_to='images/profile/', validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])], verbose_name='Image')),
                ('phone1', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Phone 1')),
                ('phone2', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Phone 2')),
                ('cv_document', models.FileField(blank=True, null=True, upload_to='document/trainees/cv/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc'])], verbose_name='CV Document')),
                ('locationAddress', models.CharField(max_length=200, verbose_name='Address')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Awarded', 'Awarded')], default='Pending', max_length=10, verbose_name='Status')),
                ('deployedDate', models.DateField(blank=True, null=True, verbose_name='When Deployed')),
                ('cohort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainees', to='main.cohort', verbose_name='Cohort belonging')),
                ('companyDeployed', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='trainees', to='main.company', verbose_name='Company Deployed')),
                ('group', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='trainees', to='main.group', verbose_name='Group belonging')),
                ('stack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainees', to='main.stack', verbose_name='Stack belonging')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trainees', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='ProgramManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ssn', models.CharField(blank=True, max_length=100, null=True, verbose_name='SSN')),
                ('profilePicture', models.ImageField(blank=True, null=True, upload_to='images/profile/', validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])], verbose_name='Image')),
                ('phone1', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Phone 1')),
                ('phone2', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Phone 2')),
                ('locationAddress', models.CharField(max_length=200, verbose_name='Address')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='managers', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
    ]
